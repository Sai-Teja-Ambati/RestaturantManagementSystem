version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: restaurant-postgres
    environment:
      POSTGRES_DB: restaurant_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - restaurant-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d restaurant_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Flyway Migration Service
  flyway:
    image: flyway/flyway:9.22.3-alpine
    container_name: restaurant-flyway
    command: >
      -url=jdbc:postgresql://postgres:5432/restaurant_db
      -user=postgres
      -password=password
      -connectRetries=60
      -connectRetriesInterval=10
      -baselineOnMigrate=true
      -validateOnMigrate=false
      migrate
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - restaurant-network
    restart: "no"

  # Spring Boot Application
  restaurant-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurant-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/restaurant_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8080
      JAVA_OPTS: "-Xmx512m -Xms256m -Djava.security.egd=file:/dev/./urandom"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    networks:
      - restaurant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  restaurant-network:
    driver: bridge